extend type Query {
    ping(pongVersion: Int!): Pong!
}

extend type Mutation {
    changeSettings(changeSettings: [ChangeSettingInput!]!): String
}

extend type Subscription {
    onNewRadioDetails: RadioDetails!
}

type Pong {
    name: String!
}

input ChangeSettingInput {
    radioId: String!
    type: SettingType!
    val: String!
    commandId: Int!
}

enum SettingType {
    SQUELCH
}

type RadioDetails {
    radioId: String!
    settings: RadioSettings!
    data: RadioData
}

type RadioSettings {
    squelch: Int!
    stereo: Boolean!
}

type RadioData {
    signalStrength: Float!
}


